
git install
一 本地git 
1 download  dmg file from http://git-scm.com/downloads, install the pkg 
2 exec the setpath shell script
3 git config --global user.name Royce1982
4 git config --global user.email wfeng1982@163.com
5 git add fileName
6 git commit -m 'desc'
7 git status
8 modify the file
9 git status
10 git diff fileName
11 git add fileName
12 git commit -m 'desc'
13 git log
14 git log --pretty=oneline
15 git commit -a  = git add fileName && git commit -m 'desc'
16 git reset --hard HEAD^ =git reset --hard HEAD~1 回退1个版本
17 git reset --hard HEAD^^ =git reset --hard HEAD~2
18 git reset --hard commitId  回退到哪个版本
19 git reflog  记录每次操作命令 及版本号
20 git log  记录提交历史;git reflog 记录命令历史
21 git checkout -- fileName 使文件回到最后一次git add 或者git commit 的状态,撤销工作区中的修改 ****
22 git reset HEAD fileName 撤销使用git add 放到暂存区中的修改，相当于没有执行git add，撤销暂存区的修改*****
23 git rm fileName  在git库中删除文件 


二、远程git github
1 ssh-keygen -t rsa -C "wfeng1982@163.com" 创建sshkey 
  无需密码  一路回车
2 到github上 account setting-ssh key 将生成的id_rsa.pub添加上

3 在github上create repo ,和本地库 名字一样

4 在本地库里执行 和远程github 绑定
 git remote add origin git@github.com:wfeng1982/gitProjects.git ,这里使用ssh协议，也可以使用https协议
  其中 origin是github默认 远程库名字,master是远程origin库的master分支, 
5 git push -u origin master 将本地master分支数据推送到github 远程origin 的master分支上，-u 不仅推送数据，同时绑定本地master和远程origin的master分支,以后可以直接 git push origin master

6 远程库已经存在，可以拷贝
 git clone git@github.com:xxxx/repoName.git

三、分支管理
1 创建dev新分支并切换到该分支
git checkout -b dev   相当于
 git branch dev  创建分支
 git checkout dev 切换分支
2 git branch   查看分支列表
3 git checkout master 切换回master 只能看到master的文件变化
4 git merge dev 目前在master分支，将dev分支合并到当前master分支
5 git branch -d dev 删除dev分支
6 git log --graph --pretty=oneline --abbrev-commit   查看分支合并图
7 git merge --no-ff -m "merge with no-ff" dev 使用--no-ff参数关掉fast forward模式，合并时创建一个新分支，保留分支合并的情况

四、开发过程
1 通过branch来对开发过程添加新特性feature,创建新feature分支,开发完毕后合并到master分支，删除feature分支
2 feature分支上开发中发现严重bug，可通过新分支修复该bug，并且需要保留当前feature的工作区状态，以备修复bug后恢复当前分支的状态
  git stash  将当前工作区状态保存起来
  切换到要修改bug的分支 比如master（有可能不是当前的feature分支）,切换到master分支。 git checkout master
  在master分支创建修改bug分支  git checkout -b issue-101 ,修复bug，提交
  git checkout master 再切回到master分支 git checkout master
  将issue-101合并到master分支 git merge --no-ff -m 'merge issue-101' issue-101
  修改完bug 再切回到 feature分支  
  查看之前工作现场 git stash list
  恢复工作现场  git stash apply 
  删除工作现场  git stash drop
  恢复删除工作现场 也可以使用 一个命令 git stash pop

  恢复指定的工作现场  git stash apply stash@{0}
  


